---
- name: Deploy Node Exporter
  hosts: all
  become: yes
  vars_files:
   - accessvm.yaml
  vars:
    node_exporter_version: "1.6.1"
    node_exporter_port: 9100
    node_exporter_user: "node_exporter"
    
  tasks:

    - name: Check if node_exporter is already running
      ansible.builtin.shell: |
        systemctl is-active node_exporter 2>/dev/null || \
        ps aux | grep -v grep | grep node_exporter || \
        docker ps | grep node_exporter
      register: node_exporter_check
      failed_when: false
      changed_when: false    

    - name: Skip if node_exporter is already running
      ansible.builtin.debug:
        msg: "Node Exporter is already running, skipping installation"
      when: node_exporter_check.rc == 0

    - name: End play for this host if node_exporter exists
      ansible.builtin.meta: end_host
      when: node_exporter_check.rc == 0

    - name: Check if Docker is available
      ansible.builtin.command: docker --version
      register: docker_check
      failed_when: false
      changed_when: false

    - name: Check if Docker Compose is available
      ansible.builtin.shell: |
        docker-compose --version 2>/dev/null || \
        docker compose version 2>/dev/null
      register: docker_compose_check
      failed_when: false
      changed_when: false

    - name: Set deployment method
      ansible.builtin.set_fact:
        use_docker: "{{ docker_check.rc == 0 and docker_compose_check.rc == 0 }}"

    - name: Deploy with Docker Compose
      block:
        - name: Create node_exporter directory
          ansible.builtin.file:
            path: /opt/node_exporter
            state: directory
            mode: '0755'

        - name: Create docker-compose.yaml
          ansible.builtin.copy:
            dest: /opt/node_exporter/docker-compose.yaml
            content: |
              services:
                node_exporter:
                  image: prom/node-exporter:v{{ node_exporter_version }}
                  container_name: node_exporter
                  restart: unless-stopped
                  ports:
                    - "{{ node_exporter_port }}:9100"
                  command:
                    - '--path.rootfs=/host'
                    - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
                  volumes:
                    - '/:/host:ro,rslave'
                  pid: host

        - name: Start node_exporter with docker compose
          ansible.builtin.shell: |
            docker-compose up -d 2>/dev/null || \
            docker compose up -d
          args:
            chdir: /opt/node_exporter
      when: use_docker
 

    - name: Deploy as system service
      block:
        - name: Download node_exporter archive
          ansible.builtin.get_url:
            url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
            dest: "/tmp/node_exporter.tar.gz"
            timeout: 60

        - name: Extract node_exporter archive
          ansible.builtin.unarchive:
            src: "/tmp/node_exporter.tar.gz"
            dest: "/tmp/"
            remote_src: yes

        - name: Copy node_exporter binary to /usr/local/bin
          ansible.builtin.copy:
            src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
            dest: "/usr/local/bin/node_exporter"
            mode: '0755'
            owner: root
            group: root
            remote_src: yes

        - name: Create node_exporter user
          ansible.builtin.user:
            name: "{{ node_exporter_user }}"
            shell: "/bin/false"
            system: yes
            create_home: no    

        - name: Create systemd service file for node_exporter
          ansible.builtin.copy:
            dest: /etc/systemd/system/node_exporter.service
            content: |
              [Unit]
              Description=Node Exporter
              Wants=network-online.target
              After=network-online.target

              [Service]
              User={{ node_exporter_user }}
              Group={{ node_exporter_user }}
              Type=simple
              ExecStart=/usr/local/bin/node_exporter
              Restart=always
              RestartSec=5

              [Install]
              WantedBy=multi-user.target
          
        - name: Reload systemd daemon
          ansible.builtin.systemd:
            daemon_reload: yes

        - name: Enable and start node_exporter service
          ansible.builtin.systemd:
            name: node_exporter
            enabled: yes
            state: started

        - name: Clean up temporary files
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - "/tmp/node_exporter.tar.gz"
            - "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"
      
      when: not use_docker

    - name: Wait for node_exporter to be ready
      ansible.builtin.wait_for:
        port: "{{ node_exporter_port }}"
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 60

    - name: Verify node_exporter is working
      ansible.builtin.uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ node_exporter_port }}/metrics"
        method: GET
        status_code: 200
      retries: 3
      delay: 5

    - name: Display deployment result
      ansible.builtin.debug:
        msg: |
          Node Exporter successfully deployed on {{ inventory_hostname }}
          Method: {{ 'Docker Compose' if use_docker else 'System Service' }}
          URL: http://{{ ansible_default_ipv4.address }}:{{ node_exporter_port }}/metrics

